var tipuesearch = {"pages": [{'title': 'HW1', 'text': '', 'tags': '', 'url': 'HW1.html'}, {'title': 'Overview總覽', 'text': 'This module will discuss sources of heat and its effects, along with various ways to cool the CPU and system. \n 本模塊將討論熱源及其影響，以及冷卻CPU和系統的各種方法。 \n', 'tags': '', 'url': 'Overview總覽.html'}, {'title': 'Heat Sources熱源', 'text': '\n \n \n Heat is generated through thermal radiation as a by-product of electromagnetic movement within the circuits of our computers. The heat is caused by the internal resistance that the electricity encounters as it flows throughout the computer, and this resistance creates enough heat that the computer often becomes very, very hot inside the case. Each component of the computer creates heat at a different rate, depending on the specific operations being performed. For example, the CPU generates the most heat, since it does the greatest number of computations and uses a large amount of electricity. Another common source of heat is the graphics processing unit (GPU), which does an enormous amount of processing when performing calculations required to support 3D graphics, such as those used in video gaming. Often, during gaming, the GPU will actually create more heat than the CPU. \n 通過熱輻射產生的熱量是我們計算機電路內電磁運動的副產品。熱量是由電流在整個計算機中流動時遇到的內部電阻引起的，而該電阻產生的熱量足以使計算機在機殼內部變得非常非常熱。根據所執行的特定操作，計算機的每個組件以不同的速率產生熱量。例如，CPU產生的熱量最多，因為它進行了大量的計算並消耗大量電能。另一個常見的熱量來源是圖形處理單元（GPU），當執行支持3D圖形（例如視頻遊戲中使用的圖形）所需的計算時，它將進行大量處理。通常，在遊戲過程中 \n Other sources of heat include the hard disk and the optical disc drive, as the spinning of the disks during the read/write cycle can generate heat from both friction and electricity. Another component of the computer that generates an enormous amount of heat is the PSU, as it transforms AC power into DC power. Because it is such a large heat source, the power supply usually has its own dedicated cooling fan. \n 其他熱源包括硬盤和光盤驅動器，因為在讀/寫週期中磁盤的旋轉會因摩擦和電而產生熱量。產生大量熱量的計算機的另一個組件是PSU，它可以將交流電轉換為直流電。由於電源如此之大，因此電源通常具有自己的專用冷卻風扇。 \n Another potential source of heat is the room in which the computer is located. If you are working in a room with a high room temperature, such as 80 degrees Fahrenheit (27 degrees Celsius), the computer has to remove additional internal heat from the machine due to the environmental conditions of the room. \n 另一個潛在的熱源是計算機所在的房間。如果您在室溫較高的房間（例如華氏80度（27攝氏度））中工作，由於房間的環境條件，計算機必須從機器中清除其他內部熱量。 \n \n \n \n \n', 'tags': '', 'url': 'Heat Sources熱源.html'}, {'title': 'Heat Effects熱效應', 'text': 'If the computer is unable to remove the heat created by the internal components or environmental heat, the BIOS of the computer may instruct intensive applications to slow down, thereby reducing the processing capability of the CPU and minimizing its heat output. Additionally, the BIOS may actually instruct various components to shut down in order to avoid overheating and possible damage to the components. This can cause the entire system to shut down without warning and can occur routinely unless a more efficient cooling system, such as a larger, more efficient fan, is outfitted into the computer. A system shutdown is rather commonplace in machines where overclocking has been performed, or in systems where a cooling fan has become damaged. \n 如果電腦無法消除內部組件產生的熱量或環境熱量，則計算機的BIOS可能會指示密集型應用程序放慢速度，從而降低CPU的處理能力並最小化其熱量輸出。 此外，BIOS實際上可以指示各種組件關閉，以避免過熱和對組件的可能損壞。 這可能會導致整個系統無預警地關閉，並且可能會常規發生，除非計算機中裝有更高效的冷卻系統（例如更大，更高效的風扇）。 在執行超頻的機器或冷卻風扇已損壞的系統中，系統關閉非常普遍。 \n Often there is no indication to the end user that an overheating condition is occurring, but even this can have severe consequences. Hard disk drives, CPUs, and GPUs are all sensitive to temperature changes. Hard drives in particular can become irreparably damaged by temperature changes due to the expansion and contraction of device components. This can cause read/write errors, or even a complete failure of the disk drive. \n 通常，最終用戶沒有跡象表明發生了過熱情況，但即使這樣也會造成嚴重後果。 硬盤驅動器，CPU和GPU都對溫度變化敏感。 由於設備組件的膨脹和收縮，特別是硬盤驅動器會因溫度變化而造成不可挽回的損害。 這可能導致讀/寫錯誤，甚至導致磁盤驅動器完全故障。 \n \n \n', 'tags': '', 'url': 'Heat Effects熱效應.html'}, {'title': 'Heat Reduction減少熱量', 'text': 'There are many ways to reduce the amount of heat generated in a computer, but the most notable way is the use of a heat sink, like the one pictured below in green. A heat sink works to draw heat away from the sensitive components, such as the CPU, GPU, northbridge, and southbridge, through conduction. It then uses the fins to dissipate heat across a wider surface area. A fan usually moves air over the surface to remove the heat from the heat sink and push it out the computer’s exhaust vents on the back of the system. Heat sinks are created out of aluminum alloys or copper, which are soft metals with high heat conductivity. \n 有許多方法可以減少計算機中產生的熱量，但是最值得注意的方法是使用散熱器，如下面的綠色圖片所示。 散熱器通過傳導將熱量從敏感組件（例如CPU，GPU，北橋和南橋）吸走。 然後，它使用散熱片在更寬的表面積上散熱。 風扇通常在表面上移動空氣，以從散熱器上散熱，然後將其從系統背面的計算機排氣孔中推出。 散熱器由鋁合金或銅製成，而鋁合金或銅是具有高導熱性的軟金屬。 \n \n CPU散熱器。 由 Paul Ely 根據CC-BY-NC-ND許可使用的照片 。 \n Modern PCs can create a great deal of heat and require the use of both a heat sink and a cooling fan to aid in airflow and reduce the effect of heat on the nearby components. Case design is important to create good air flow through the case. Just like opening the windows and doors of a house can create a straight-through wind tunnel effect, cases are built to maximize airflow. Also, cables inside the case should be bundled and tucked out of the way to increase airflow and maximize cooling. \n 現代PC會產生大量熱量，並且需要同時使用散熱器和冷卻風扇來幫助氣流並減少熱量對附近組件的影響。 機箱設計對於在機箱中產生良好的氣流很重要。 就像打開房屋的門窗可以產生直通的風洞效果一樣，箱體也可以最大化氣流。 另外，應捆紮和捆紮外殼內的電纜，以增加氣流並最大程度地冷卻。 \n Most modern motherboards and BIOS support temperature monitoring and control for the motherboard and its components. The name for this varies depending on manufacturer, but often it is called PC health or temperature monitoring. For motherboards that support overclocking, you can configure the settings in the BIOS to increase or decrease your processing capability, and thereby prevent additional heat from being generated. The CPU has a sensor that monitors its temperature, and the BIOS can increase or decrease the fan speed to control the temperature of the CPU. Remember, though, by reducing the power consumption (and therefore heat), you are also simultaneously reducing the performance of the CPU. \n 大多數現代主板和BIOS支持對主板及其組件進行溫度監控。其名稱因製造商而異，但通常稱為PC運行狀況或溫度監控。對於支持超頻的主板，您可以在BIOS中配置設置以增加或減少處理能力，從而防止產生更多的熱量。CPU具有監視其溫度的傳感器，BIOS可以增加或減小風扇速度以控制CPU的溫度。但是請記住，通過減少功耗（並因此減少熱量），您同時也在降低CPU的性能。 \n \n BIOS系統溫度顯示。 照片由 Steve_L 根據CC-BY-NC許可 使用 。 \n 幾十年來，已經引入了各種冷卻方法，每種方法都有其自身的優點和缺點。 \n \n \n', 'tags': '', 'url': 'Heat Reduction減少熱量.html'}, {'title': 'Active Air Cooling主動風冷', 'text': 'Active air cooling components consist of a fan and a cooling plate (heat sink) made of aluminum or copper. A fan blows fresh air on a heat sink placed over the components that need to be cooled. The heat sink’s fins increase the surface of the metal plate and increase the heat exchange capabilities of the component. The fan blows the air between those fins, making the heat exchange quicker and more efficient, as it rapidly removes the heated air that is produced between the fins. There is only one drawback to active air cooling: the component that generates heat can never be cooled below the ambient room temperature. This is because active cooling uses forced air from the room, and the room air cannot cool a component to a lower temperature than the ambient temperature. These components are very reliable, and the cost of this system is quite affordable. \n 主動空氣冷卻組件由風扇和鋁或銅製成的冷卻板（散熱器）組成。風扇將新鮮空氣吹到放置在需要冷卻的組件上方的散熱器上。散熱器的散熱片增加了金屬板的表面，並增加了組件的熱交換能力。風扇在這些散熱片之間吹動空氣，從而使熱交換更快，更有效，因為它可以快速去除散熱片之間產生的熱空氣。主動空氣冷卻只有一個缺點：產生熱量的組件永遠無法冷卻到室溫以下。這是因為主動冷卻使用來自房間的強制空氣，並且房間空氣無法將組件冷卻到比環境溫度低的溫度。這些組件非常可靠， \n \n \n', 'tags': '', 'url': 'Active Air Cooling主動風冷.html'}, {'title': 'Passive Air Cooling被動風冷', 'text': 'Similar to the active air cooling method, passive air cooling uses a heat sink to create a larger cooling surface of a component. The difference lies in the size of the heat sink, though, since passive air cooling relies solely on the size of the fins to reduce the heat. These fins must be large enough and must also have enough space between them so that a natural flow of air can be achieved that will adequately remove the heat. These heat sinks can become quite heavy and require special parts to be fixed over the part to be cooled. Passive air cooling is the most efficient way of cooling in terms of power saving, since it uses no power to operate. The drawback to this method is weight, since heavy and large heat sinks must be fixed over small parts, increasing the total weight of a computer and reducing the usable area inside the case. Additionally, this method doesn’t work well when the ambient temperature is high, because high ambient temperature causes the passive air cooling to become ineffective. \n 類似於主動空氣冷卻方法，被動空氣冷卻使用散熱器來創建組件的較大冷卻表面。 不過，區別在於散熱器的大小，因為被動空氣冷卻僅依賴散熱片的大小來減少熱量。 這些散熱片必須足夠大，並且它們之間還必須具有足夠的空間，以便可以實現自然的空氣流動，從而充分散熱。 這些散熱器會變得很重，需要將特殊零件固定在要冷卻的零件上。 就省電而言，被動式空氣冷卻是最有效的冷卻方式，因為它不使用任何電源進行操作。 這種方法的缺點是重量大，因為必須將重型散熱器和大型散熱器固定在較小的零件上，這會增加計算機的總重量並減小機箱內部的可用面。 \n \n \n', 'tags': '', 'url': 'Passive Air Cooling被動風冷.html'}, {'title': 'Liquid Cooling液體冷卻', 'text': "Modern CPUs generate twice as much heat as CPUs did five years ago. This is even truer for the GPUs. For example, a powerful dual-processor graphics card can generate as much as 380 watts of heat. Many contemporary machines use multiple processors and graphics cards, making the efficient cooling of these components a priority. Removing such vast amounts of heat in a space-constrained environment such as a computer chassis is traditionally done at the cost of an uncomfortably high noise level from the fan. Liquid cooling minimizes the noise level required. Liquid cooling is also the best solution for rapid heat removal due to the high thermal output of the GPUs and CPUs in gaming systems and high performance computers respectively. A water block normally offers a lower profile cooling solution and it allows double computational power in the same cubic footprint. The liquid cooling system dramatically lowers the operational temperatures and increases the ability to overclock CPUs to higher levels without damage. \n 現代CPU產生的熱量是五年前的兩倍。 對於GPU來說更是如此。 例如，功能強大的雙處理器圖形卡可以產生多達380瓦的熱量。 許多現代機器使用多個處理器和圖形卡，因此優先考慮有效冷卻這些組件。 傳統上，在空間受限的環境（例如計算機機箱）中清除如此大量的熱量，是要付出代價的，否則風扇會產生令人不快的高噪音水平。 液體冷卻可將所需的噪音降至最低。 由於分別在遊戲系統和高性能計算機中的GPU和CPU的高熱量輸出，液體冷卻也是快速散熱的最佳解決方案。 水冷塊通常提供較低輪廓的冷卻解決方案，並且在相同的立方尺寸內可以實現雙倍的計算能力。 液體冷卻系統顯著降低了工作溫度，並增強了將CPU超頻到更高水平而不會造成損壞的能力。 \n Liquid cooling takes advantage of a basic principle of thermodynamics — that heat moves from warmer objects to cooler objects. As the cooler object gets warmer, the warmer object gets cooler. The sole purpose is to transfer heat (energy) away from critical computer components quickly and effectively. The heat is usually transferred to the surrounding environment by dissipating the heat through the heat sink and radiators. Water has a high level of thermal conductivity, meaning it absorbs heat better than air. Liquid cooling works by running water through the channels in the water block attached to each of the components that require cooling, transferring heat from each part to a radiator that dissipates the heat and keeps the water cool — similar to a car's radiator. This lets the processor, graphics card, and other hardware cool down much more effectively. \n 液體冷卻利用了熱力學的基本原理，即熱量從較熱的物體轉移到較冷的物體。 隨著較冷的物體變熱，較熱的物體變冷。 唯一的目的是快速有效地將熱量（能量）從關鍵計算機組件中轉移出去。 通常通過通過散熱器和散熱器散發熱量，將熱量傳遞到周圍環境。 水的導熱係數很高，這意味著它比空氣吸收的熱量更好。 液體冷卻的工作原理是使水流過連接到需要冷卻的每個組件的水冷塊中的通道，將熱量從每個零件傳遞到散熱器，該散熱器散發熱量並使水保持涼爽，類似於汽車的散熱器。 這樣，處理器，圖形卡， \n Liquid cooling allows the transfer of more heat from the components being cooled than air, making liquid cooling perfect for overclocking and high-performance computer applications. In comparison to air cooling, liquid cooling is not influenced by the ambient temperature, making it a better choice in environments with a high ambient heat. Also, liquid cooling has a relatively low noise level because it uses much quieter and smaller fans than those used in active cooling. \n 液體冷卻使被冷卻的組件比空氣傳遞更多的熱量，使液體冷卻非常適合超頻和高性能計算機應用。 與空氣冷卻相比，液體冷卻不受環境溫度的影響，因此使其在環境熱量較高的環境中成為更好的選擇。 而且，液體冷卻的噪音水平相對較低，因為與主動冷卻相比，液體冷卻使用的風扇更安靜，更小。 \n The major drawbacks of liquid cooling are complexity and cost. Also, liquid cooling can be messy and cause damage when a failure in pipe connections occurs. Liquid cooling also needs a good deal of power to operate the pump. Despite some of these drawbacks, liquid cooling is still popular with gamers because of its efficiency and effectiveness. \n 液體冷卻的主要缺點是複雜性和成本。 同樣，當管道連接發生故障時，液體冷卻可能會造成混亂，並造成損壞。 液體冷卻還需要大量功率才能操作泵。 儘管存在這些缺點，但液體冷卻由於其效率和有效性而仍然受到遊戲玩家的歡迎。 \n In a liquid cooled system, each component that requires cooling has a cooling plate (heat sink) attached to it. This heat sink, usually made of copper or aluminum, is a hollow plate with an input and an output hose through which the coolant will flow. The circulating pump will circulate the coolant from the radiator to the cooling plates, then to the tank and back to the radiator, where the heat is dissipated. \n 在液冷系統中，需要冷卻的每個組件都有一個連接的冷卻板（散熱器）。 該散熱器通常由銅或鋁製成，是一個帶有輸入和輸出軟管的中空板，冷卻液將流過該軟管。 循環泵將使冷卻劑從散熱器循環到冷卻板，然後再到水箱，再回到散熱器，在那兒散熱。 \n Here are more details about each component: \n 以下是有關每個組件的更多詳細信息： \n Radiator : The radiator moves the absorbed heat into the surrounding environment by using a cooling fan to effectively cool the liquid. The bigger the radiator, the more effective it becomes, which results in lower liquid temperature and a lower component temperature. \n 散熱器 ：散熱器通過使用冷卻風扇有效地冷卻液體，將吸收的熱量轉移到周圍環境中。 散熱器越大，散熱器越有效，從而導致較低的液體溫度和較低的組件溫度。 \n Water block : The water block (or heat sink) absorbs the heat from the microprocessor. It contains microfins that are used to boost the surface area for more optimal heat transfer. As the liquid flows through the water block, it absorbs the heat. If you have a more efficient water block, your overall component temperature will decrease. \n 水塊 ：水塊（或散熱器）從微處理器吸收熱量。 它包含微翅片，這些微翅片用於增加表面積以實現更佳的熱傳遞。 當液體流過水塊時，它吸收熱量。 如果您使用更有效的阻水劑，則組件的整體溫度將會降低。 \n Water pump : The water pump provides the circulation of the liquid in the cooling loop from the hot side to the cold side. This allows for effective heat transfer throughout the entire loop. Without a good water pump, the liquid would stagnate in the loop and heat transfer would not occur. \n 水泵 ：水泵提供冷卻迴路中從熱側到冷側的液體循環。 這允許在整個迴路中進行有效的熱傳遞。 沒有良好的水泵，液體將在迴路中停滯，並且不會發生熱傳遞。 \n Reservoir : The reservoir unit allows for easier removal of air after the initial liquid cooling installation and serves as an expansion area for the coolant during temperature fluctuations. \n 儲藏 ：儲存器單元允許初始液體冷卻安裝後容易除去空氣，並作為在溫度波動的冷卻的膨脹區域。 \n \n 液體冷卻系統。 Terror Noize 在CC-BY-NC-ND許可下使用的照片 。 \n", 'tags': '', 'url': 'Liquid Cooling液體冷卻.html'}, {'title': 'CPU Cooling CPU散熱', 'text': "In the lab below, you should install a new CPU. For the purpose of this lab, we have removed the computer's case for you. You will also need to apply thermal paste, install the heat sink and install the cooling fan. For the purposes of this lab exercise, you can assume that ESD precautions are in place. \n 在下面的實驗室中，您應該安裝一個新的CPU。 為了本實驗的目的，我們為您卸下了計算機機箱。 您還需要塗導熱膏，安裝散熱器和安裝冷卻風扇。 就本練習而言，您可以假定已採取ESD預防措施。 \n For maintenance, it is important to clear the fan blades and heat sink of dust at least every six months. This is a quick and easy maintenance task. Blowing compressed air into the fan blades and across the heat sink fins will keep the cooling system running smoothly. \n 對於維護，重要的是至少每六個月清潔一次風扇葉片和散熱器的灰塵。 這是一項快速簡便的維護任務。 將壓縮空氣吹入風扇葉片並穿過散熱片將使冷卻系統保持平穩運行。 \n", 'tags': '', 'url': 'CPU Cooling CPU散熱.html'}, {'title': 'Case Fans機箱風扇', 'text': 'Case fans are necessary to remove all the hot air generated by computer components, especially video cards and CPUs. The hot air has to be vented out and replaced by cooler air. Cool air can usually be found closer to the ground, since heat tends to rise, so most cases are designed so that cooler air is pulled into the system at the bottom by the front case fan. Air is then exhausted out the rear-top of the case near the CPU as well as out of the side of the case near the graphics processing unit. \n 機箱風扇對於消除計算機組件（尤其是視頻卡和CPU）產生的所有熱空氣是必不可少的。 必須排出熱空氣，並用涼爽的空氣代替。 通常會發現較冷的空氣靠近地面，因為熱量會增加，因此大多數情況下都設計成使較冷的空氣被前殼體風扇從底部吸入系統中。 然後，空氣從CPU附近的機箱後部以及圖形處理單元附近的機箱側面排出。 \n Example: \n 例: \n \n Here is a common case fan setup: \n 1x fan in the bottom-front of the case, near the drive bays (intake). \n 1x fan in the rear-top of the case, "behind" and above the CPU (exhaust). \n 1x fan in the side of the case, across from the GPU (intake). \n This setup pulls air in through the front, channels it through the drive bays, around the video card, and out the exhaust fan. The side fan forces air directly onto the hottest component (the GPU), and is then pushed up by the front fan and channeled out of the rear exhaust fan. \n 這是一個常見的風扇設置： \n 機箱底部前部靠近驅動器托架（進氣口）的1個風扇。 \n 機箱後部頂部，CPU上方（排氣口之後）和上方的1個風扇。 \n 機箱側面有1個風扇，與GPU相對（進氣）。 \n 此設置將空氣從前部吸入，通過驅動器托架將其引導到視頻卡周圍，然後從排氣風扇中排出。 側風扇將空氣直接壓到最熱的組件（GPU）上，然後由前風扇向上推動，並從後部排氣風扇中導出。 \n \n 機箱風扇。 照片由 William Hook 根據CC-BY-SA許可使用 。 \n The following steps will enable you to install a case fan. First, you must ensure that your PC is powered off before you install any component in your system. After opening the case, you will need a Phillips head screwdriver in order to remove/install case fans. If you’re replacing a fan, simply remove the old one by unscrewing it from the case and unplugging the cable from the header (or the MOLEX connection, if you have an older system). To mount the new fan, hold the fan up to the mounting position so that the holes for screws line up with the holes in the case. While holding the fan in place with one hand, with your other hand use four screws to secure it in place. Some models use plastic friction clips to hold the fan in place instead of screws. If the system is like this, simply un-snap the clips, remove the fan, and pop the new one in its place. \n 以下步驟將使您能夠安裝機箱風扇。首先，在安裝系統中的任何組件之前，必須確保已關閉PC的電源。打開機箱後，您將需要使用十字螺絲刀來拆卸/安裝機箱風扇。如果要更換風扇，只需將舊風扇從機箱中擰出並從插頭（或MOLEX連接，如果您使用較舊的系統）上拔下電纜，即可將其卸下。要安裝新風扇，請將風扇保持在安裝位置，以使螺釘孔與外殼上的孔對齊。一隻手將風扇固定到位，另一隻手用四顆螺釘將其固定到位。某些型號使用塑料摩擦夾而不是螺釘將風扇固定到位。如果系統是這樣的，只需取消卡扣，卸下風扇， \n After you secure the fan, you need to attach the fan to an unused fan header to provide the fan with power. The headers are keyed to ensure a proper connection and prevent you from plugging them in backwards. Four-pin headers will work with three-pin fans, but you will not be able to control fan speeds, since this is only performed by the fourth pin in the connector. \n 固定風扇後，需要將風扇連接到未使用的風扇接頭連接器上，以為風扇供電。 標頭的鍵可確保正確連接，並防止您向後插入標頭。 四針接頭連接器將與三針風扇一起使用，但是您將無法控制風扇速度，因為這只能由連接器中的第四針執行。 \n When you are done installing the fan, make sure you route your fan and other cables using proper cable management techniques and some zip-ties. Proper cable management prevents the fans from hitting the cables when they spin and also aids in proper airflow to increase cooling efficiency. Be sure to power up the computer and make sure the fan is working properly. \n 完成安裝風扇後，請確保使用適當的電纜管理技術和一些紮帶來布放風扇和其他電纜。 正確的電纜管理可防止風扇在旋轉時撞到電纜，並有助於適當的氣流以提高冷卻效率。 確保打開計算機電源，並確保風扇正常工作。 \n \n 紅色機箱風扇。 照片由" Airplane Lane " 根據CC-BY許可使用 。 \n', 'tags': '', 'url': 'Case Fans機箱風扇.html'}, {'title': 'HW2', 'text': '', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': '', 'tags': '', 'url': 'HW3.html'}, {'title': '17.Decode A Web Page 網站解碼', 'text': 'This is the first 4-chili exercise of this blog! We’ll see what people think, and decide whether or not to continue with 4-chili exercises in the future. \n 這是此部落格的第一個4個辣椒練習！ 我們將看看人們的想法，並決定將來是否繼續進行4個辣椒練習。 \n', 'tags': '', 'url': '17.Decode A Web Page 網站解碼.html'}, {'title': 'Exercise 17(and Solution) 練習17(跟解決方法)', 'text': 'Use the \xa0 BeautifulSoup \xa0 and \xa0 requests \xa0 Python packages to print out a list of all the article titles on the \xa0 New York Times homepage . \n 使用 BeautifulSoup 和 requests Python軟件包在 《紐約時報》主頁 \xa0 上打印出所有文章標題的列表 。 \n', 'tags': '', 'url': 'Exercise 17(and Solution) 練習17(跟解決方法).html'}, {'title': 'Discussion 討論', 'text': 'Concepts for this week: \n 本周的概念: \n \n Libraries \n requests \n BeautifulSoup \n \n', 'tags': '', 'url': 'Discussion 討論.html'}, {'title': 'Libraries 軟件庫', 'text': 'Many people have written libraries in Python that do not come with the standard distribution of Python (like the \xa0 random \xa0 library mentioned \xa0in a previous post ). These libraries can do anything from machine learning to date and time formatting to meme generation. If you have a task you need done, most likely someone has written a library for it. \n 許多人都使用Python編寫了一些庫，這些庫不是Python的標準發行版所附帶的（例如上一篇文章中 random 提到 的 庫 ）。 這些庫可以執行從機器學習到日期和時間格式化到模因生成的所有操作。 如果您有需要完成的任務，很可能有人為它編寫了一個軟件庫。 \n There are three main things to keep in mind when using a library: \n \n You need to install it. Installation in GNU/Linux based systems will generally be easier than on Windows or OSX, but there will always be documentation for how to do it. \n You need to import it. At the top of your program, make sure you write the line \xa0 import requests , or whatever the name of your library is. Then you can use it to your heart’s content. \n You need to read documentation. Someone else wrote it, so the rules might not be so obvious. Anyone (or any group) that writes a Python package writes documentation for it. Eventually, reading documentation will become second nature. \n \n 使用軟件庫時，要牢記三件事： \n \n 您需要安裝它。 與基於Windows或OSX的系統相比，在基於GNU / Linux的系統上的安裝通常會更容易，但是始終會有有關如何執行此操作的文檔。 \n 您需要導入它。 在程序的頂部，確保您編寫了line import requests 或庫的名稱。 然後，您可以使用它來滿足您的需求。 \n 您需要閱讀文檔。 有人寫的，所以規則可能不那麼明顯。 編寫Python程序包的任何人（或任何小組）都會為其編寫文檔。 最終，閱讀文檔將成為第二天性。 \n \n', 'tags': '', 'url': 'Libraries 軟件庫.html'}, {'title': 'Requests 要求', 'text': "One of the most useful libraries written for Python recently, request \xa0 does “HTTP for humans.” What this means in laymen’s terms is that it asks the internet things from Python. When you type “ facebook . com ” into the browser, you are asking the internet to show you Facebook’s homepage. \n 最近，為Python編寫的最有用的庫之一就是請求 執行“人類HTTP”。 用外行的話來說，這意味著它向Python詢問互聯網問題。 當您鍵入“ facebook.com ”進入瀏覽器，您正在要求互聯網顯示您的Facebook主頁。 \n In the same way, a program can ask the internet something. It might not be “show me Facebook”, but you can for example ask Github for a list of all the repositories that the user “mprat” has. You can do this with an API (Application Programming Interface). This exercise doesn’t use APIs, so we’ll talk more about those in a later post. \n 同樣，程序可以向互聯網詢問一些信息。 它可能不是“向我顯示Facebook”，但是例如，您可以要求Github提供用戶“mprat”擁有的所有存儲庫的列表。 您可以使用API（應用程序編程接口）來執行此操作。 本練習不使用APIs，因此我們將在以後的文章中進一步討論。 \n Back to showing the user a webpage. When I type “ facebook . com ” into the browser, Facebook sends my browser a bunch of HTML (basically, code for how the website looks). The browser then takes this HTML and shows it to me in a pretty way. (Fun fact: to see the HTML of any page in a browser, right click on the page and “Inspect Element” or “View Source” depending on your browser. In Chrome, “Inspect Element” will pop up a module at the bottom of your page where you can see the HTML from the page. This trick will come in handy when you’re doing the exercise. If you need to DO anything with this HTML, better to use a program. More posts about this coming later.) If I want to “see” a webpage with a program, all I need to do is ask it for it’s HTML and read it. \n 回到向用戶顯示網頁。當我輸入“ facebook.com ”進入瀏覽器，Facebook向我的瀏覽器發送了一堆HTML（基本上是有關網站外觀的代碼）。 然後瀏覽器將這個HTML並以漂亮的方式顯示給我。 （有趣的事實：要在瀏覽器中查看任何頁面的HTML，請右鍵單擊該頁面，然後根據您的瀏覽器單擊“檢查元素”或“查看代源碼”。在Chrome中，“檢查元素”將在底部彈出一個模塊您可以在頁面的其中看到HTML。如果您需要使用此HTML做任何事情，最好使用一個程序。）如果我想“查看”帶有程序的網頁，我所要做的就是向其索要HTML並閱讀它。 \n The ‘requests’ library does half of that job: it asks (requests, if you will) a server for information. This could be just data (through an API - more later) or in the case of this exercise, HTML. \n “請求”軟件庫完成了一半的工作：它向服務器請求（如果需要的話）信息。 這可能只是數據（通過API-稍後介紹），或者在本練習中為HTML。 \n Look at the \xa0 documentation \xa0 for all the details you need. In this particular latest version, all you need to do to ask a website for it’s HTML is: \n 查看 文檔 以獲取所需的所有詳細信息。 在此特定的最新版本中，向網站詢問其HTML所需要做的就是： \n \n    import   requests \n   url   =   ' http :// github . com ' \n   r   =   requests . get ( url ) \n   r_html   =   r . text \n \n Now inside the variable \xa0 r_html , you have the HTML of the page as a string. Reading (otherwise called \xa0 parsing ) happens with a different Python package. \n 現在，在變量中 r_html ，你將頁面的HTML作為字符串。讀取（否則稱為 parsing ）發生在另一個Python包中。 \n", 'tags': '', 'url': 'Requests 要求.html'}, {'title': 'BeautifulSoup', 'text': "To solve our problem of parsing (reading, understanding, interpreting) the string of HTML we got from \xa0 requests , we use the \xa0 BeautifulSoup \xa0 library. \n 為了解決解析（讀取，理解，解釋）從中獲得的HTML字符串的問題 requests ，我們使用了 BeautifulSoup 軟件 庫。 \n What it does is give a \xa0 hierarchical \xa0 (a pyramid structure) to the HTML in the document. If you don’t know anything about HTML, the \xa0 Wikipedia \xa0 article is a good summary. For the purposes of this exercise, you don’t need to know anything about HTML beyond being able to look at it quickly. \n 它的作用是為文檔中的HTML提供 分層結構 （金字塔結構）。 如果您對HTML一無所知，請參閱 Wikipedia 文章。 出於本練習的目的，除了能夠快速查看HTML外，你無需了解其他任何有關HTML的知識。 \n Because \xa0 BeautifulSoup \xa0 takes care of interpreting our HTML for us, we can ask it things like: “give me all the lines with \xa0 <p> \xa0 tags” or “find me the parent element to the \xa0 <title> \xa0 element”, etc. \n 因為 BeautifulSoup 要為我們解釋HTML，所以我們可以提出類似的要求：“給我所有帶 <p> 標籤 的行 ”或“為元素找到父 <title> 元素”.......等等。 \n Your code would look something like this: \n 您的代碼如下所示： \n \n    from   bs4   import   BeautifulSoup \n\n   # some requests code here for getting r_html  \n\n   soup   =   BeautifulSoup ( r_html ) \n   title   =   soup . find ( 'span' ,   'articletitle' ) . string \n \n And you can do many more things in \xa0 BeautifulSoup , but I will leave you to explore those by yourself or through other later exercises. \n \n \n \n \n \n \n 您可以在中進行更多操作 BeautifulSoup ，但是我將讓您自己或通過其他後續練習來探索這些內容。 \n", 'tags': '', 'url': 'BeautifulSoup.html'}, {'title': 'Cows And Bulls', 'text': '', 'tags': '', 'url': 'Cows And Bulls.html'}, {'title': 'Exercise 18(And Solution)', 'text': 'Create a program that will play the “cows and bulls” game with the user. The game works like this: \n 創建一個程序，將與用戶一起玩“cows and bulls”遊戲。 遊戲的工作原理如下: \n Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the user guessed correctly \xa0 in the correct place , they have a “cow”. For every digit the user guessed correctly \xa0 in the wrong place \xa0 is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout teh game and tell the user at the end. \n 隨機生成一個4位數字。要求用戶猜測一個4位數字。對於用戶在正確位置 正確 猜到的每個數字，他們都有一個“cow”。用戶在錯誤的位置 正確猜出的每個數字 都是“bull”。 每次用戶猜測時，告訴他們他們有多少“cows”和“bulls”。 一旦用戶猜出正確的數字，遊戲就結束了。 跟踪用戶在整個遊戲中所做的猜測數量，並在最後告訴用戶。 \n Say the number generated by the computer is 1038. An example interaction could look like this: \n 假設計算機生成的數字是1038。一個範例互動如下所示： \n \n   Welcome to the Cows and Bulls Game! \n  Enter a number: \n  >>> 1234\n  2 cows, 0 bulls\n  >>> 1256\n  1 cow, 1 bull\n  ... \n \n Until the user guesses the number. \n 直到用戶猜出數字。 \nConcepts for this week:\n \n Randomness (we’ve covered this a few times before. Mainly in \xa0 a previous exercise .) \n Functions (covered in a \xa0 previous exercise \xa0 also) \n Main method \n \n', 'tags': '', 'url': 'Exercise 18(And Solution).html'}, {'title': 'Main method', 'text': 'Since we have covered randomness and functions, we still need to cover the idea of a “main” method. If you have programmed before, you will wonder why you haven’t needed a main method so far in your Python code. \n First, here is how you do it: \n \n    def   square ( num ): \n     return   num   *   num \n\n   if   __name__ == "__main__" : \n     user_num   =   input ( "Give me a number: " ) \n     print ( square ( num )) \n \n Note that in both \xa0 __name__ \xa0 and \xa0 __main__ , there are TWO underscore ( _ ) characters. \n If you run this program, it behaves as expected: asking the use for a number and printing out the square in return. However, you might be wondering - how is this different from the way we’ve been writing programs until this point? \n \n    def   square ( num ): \n     return   num   *   num \n\n   user_num   =   input ( "Give me a number: " ) \n   print ( square ( num )) \n \n You are correct if you think the second example will have THE SAME BEHAVIOR as in the first case. At least the way we’ve been running Python files until this point. I will attempt to explain. \n Python does not have a specified entry point like many other languages (for example, C++ always looks for a \xa0 void main() \xa0 method to run). Python files and programs are executed line by line by the Python interpreter, from however the Python file or program is run. When the definition of a function is reached by the interpreter, the function is not run, but rather loaded to be run later. (We discussed this when we talked about functions in a \xa0 previous post .) Whatever is written outside of a function will get executed immediately - this includes creating variables and calling the functions that were previously loaded. \n There are (most commonly) two ways to run a Python file: \n \n “Just running it” (which you can do from the terminal, through the “Run” button in IDLE, etc.) \n Importing the file as a module \n \n The first way is the way that you most likely have been using if you have been doing the exercises in this blog. If you have many files in a large project, this is how you run the “entry point” file in the project. \n The second way is more subtle: it is what happens when you write an \xa0 import \xa0 statement at the top of your file. In this exercise for example, you need to \xa0 import random \xa0 into your program to use the random module. Somewhere on your computer there is a file (or a group of Python files) that make up the \xa0 random \xa0 module, and in the process of importing them, what you are actually doing is running the file(s) from that module. \n When you have functions defined inside a file (with the \xa0 def \xa0 keyword, like the \xa0 def square \xa0 function above) and run a file, the function is not immediately run. You can think what happens is the function is stored for future use. \n Anything else in the file - variables created, functions that are called, operations done, etc - are executed immediately when a Python file is run. \n However, in the case where you are importing a Python file into another, you want to load all of the functions without creating variables or executing any functions. You just want to load them to use them later. How do you reconcile this problem? With the \xa0 if __name__=="__main__" \xa0 statement. Create your variables and all your functions inside this statement, and when you import your file into another, it will not mess up your program by creating variables or calling functions. \n What the \xa0 if __name__=="__main__" \xa0 statement from above does is ensure that variables that are created, functions that are called, operations that are done, etc ONLY when you directly run the file, not when you import it into another. \n', 'tags': '', 'url': 'Main method.html'}]};